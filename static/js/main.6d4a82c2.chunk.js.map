{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistic.styled.jsx","components/Statistics/Statistics.jsx","components/Section/Sections.styled.jsx","components/Section/Section.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["Button","styled","button","FeedbackOptions","options","onLeaveFeedback","map","option","onClick","StatiscsItem","li","Statistics","props","good","neutral","bad","total","positivePercentage","SectionPage","section","Title","h2","Section","title","children","propTypec","PropTypes","string","isRequired","element","NotificationMessage","div","Notification","message","Container","App","state","counterFeedback","optionName","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAEaA,EAASC,IAAOC,OAAV,6J,OCENC,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACzC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,cAACP,EAAD,CAAqBQ,QAAS,kBAAMH,EAAgBE,IAApD,SACGA,GADUA,SCNRE,EAAeR,IAAOS,GAAV,wECEZC,EAAa,SAAAC,GACxB,IAAQC,EAAkDD,EAAlDC,KAAMC,EAA4CF,EAA5CE,QAASC,EAAmCH,EAAnCG,IAAKC,EAA8BJ,EAA9BI,MAAOC,EAAuBL,EAAvBK,mBAEnC,OACE,+BACE,eAACR,EAAD,mBAAoBI,KACpB,eAACJ,EAAD,uBAAwBK,KACxB,eAACL,EAAD,kBAAmBM,KACnB,eAACN,EAAD,oBAAqBO,KACrB,eAACP,EAAD,gCAAiCQ,EAAjC,W,gBCXOC,EAAcjB,IAAOkB,QAAV,8CAIXC,EAAQnB,IAAOoB,GAAV,mDCFLC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,eAACN,EAAD,WACE,cAACE,EAAD,UAAQG,IACPC,MAKPF,EAAQG,UAAY,CAClBF,MAAOG,IAAUC,OAAOC,WACxBJ,SAAUE,IAAUG,QAAQD,YCbvB,I,EAAME,EAAsB7B,IAAO8B,IAAV,kECEnBC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAO,cAACH,EAAD,UAAsBG,KCHlBC,EAAYjC,IAAO8B,IAAV,gECKTI,EAAb,4MACEC,MAAQ,CACNvB,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAOEsB,gBAAkB,SAAAC,GAChB,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAGF,EAAaE,EAAUF,GAAc,OATrD,EAaEG,mBAAqB,kBAClB,EAAKzB,MAAQ,EAAKoB,MAAMvB,KAAO,EAAKuB,MAAMtB,QAAU,EAAKsB,MAAMrB,KAdpE,EAeE2B,gCAAkC,WAEhC,OADA,EAAKzB,mBAAqB,EAAKmB,MAAMvB,MAAQ,EAAKG,MAAQ,KACnD2B,KAAKC,MAAM,EAAK3B,qBAjB3B,4CAmBE,WACE,MAA+B4B,KAAKT,MAA5BvB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACL8B,KAAKJ,qBAAfzB,MACR,OACE,eAACkB,EAAD,WACE,cAAC,EAAD,CAASX,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEnB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBwC,KAAKR,oBAG1B,cAAC,EAAD,CAASd,MAAO,aAAhB,SACGsB,KAAK7B,MAAQ,EACZ,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO6B,KAAK7B,MACZC,mBAAoB4B,KAAKH,oCAG3B,cAAC,EAAD,CAAcT,QAAQ,+BAxClC,GAAyBa,aCFzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6d4a82c2.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Button = styled.button`\r\n  margin-right: 15px;\r\n  padding: 10px;\r\n  margin-left: auto;\r\n  &:focus {\r\n    background-color: blue;\r\n    color: white;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from './FeedbackOptions.styled';\r\n\r\nexport const FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map(option => (\r\n        <Button key={option} onClick={() => onLeaveFeedback(option)}>\r\n          {option}\r\n        </Button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const StatiscsItem = styled.li`\r\n  list-style: none;\r\n  padding-left: 15px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StatiscsItem } from './Statistic.styled';\r\n\r\nexport const Statistics = props => {\r\n  const { good, neutral, bad, total, positivePercentage } = props;\r\n\r\n  return (\r\n    <ul>\r\n      <StatiscsItem>Good:{good}</StatiscsItem>\r\n      <StatiscsItem>Neutral: {neutral}</StatiscsItem>\r\n      <StatiscsItem>Bad:{bad}</StatiscsItem>\r\n      <StatiscsItem>Total:{total}</StatiscsItem>\r\n      <StatiscsItem>Positive feedback:{positivePercentage}%</StatiscsItem>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const SectionPage = styled.section`\r\n  padding: 30px;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  text-align: center;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { SectionPage, Title } from './Sections.styled';\r\n\r\nexport const Section = ({ title, children }) => {\r\n  return (\r\n    <SectionPage>\r\n      <Title>{title}</Title>\r\n      {children}\r\n    </SectionPage>\r\n  );\r\n};\r\n\r\nSection.propTypec = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const NotificationMessage = styled.div`\r\n  font-size: 24px;\r\n  color: orange;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NotificationMessage } from './Notification.styled';\r\n\r\nexport const Notification = ({ message }) => {\r\n  return <NotificationMessage>{message}</NotificationMessage>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  padding: 15px;\r\n`;\r\n","import { FeedbackOptions } from 'components/FeedbackOptions/FeedbackOptions';\r\nimport { Component } from 'react';\r\nimport { Statistics } from 'components/Statistics/Statistics';\r\nimport { Section } from 'components/Section/Section';\r\nimport { Notification } from 'components/Notification/Notification';\r\nimport { Container } from './App.styled';\r\n\r\nexport class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  counterFeedback = optionName => {\r\n    this.setState(prevState => {\r\n      return { [optionName]: prevState[optionName] + 1 };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () =>\r\n    (this.total = this.state.good + this.state.neutral + this.state.bad);\r\n  countPositiveFeedbackPercentage = () => {\r\n    this.positivePercentage = this.state.good / (this.total / 100);\r\n    return Math.round(this.positivePercentage);\r\n  };\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const { total } = this.countTotalFeedback();\r\n    return (\r\n      <Container>\r\n        <Section title={'Please leave feedback'}>\r\n          <FeedbackOptions\r\n            options={['good', 'neutral', 'bad']}\r\n            onLeaveFeedback={this.counterFeedback}\r\n          />\r\n        </Section>\r\n        <Section title={'Statistics'}>\r\n          {this.total > 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={this.total}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\"></Notification>\r\n          )}\r\n        </Section>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}